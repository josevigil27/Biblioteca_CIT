{"version":3,"sources":["horas.js","numero.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","telefonoInput","input","phoneNumber","replace","length","substring","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultado","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n        const categoria = document.querySelector('[name = \"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name = \"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda)\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n                \r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            \r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n    const telefonoInput = document.querySelector('#telefono');\r\n\r\n\r\n    if(telefonoInput) {\r\n        telefonoInput.addEventListener('keypress', formatoTelefono)\r\n\r\n        function formatoTelefono(input) {\r\n            // Eliminar cualquier carácter que no sea un dígito\r\n            var phoneNumber = input.value.replace(/\\D/g, '');\r\n\r\n            // Si la longitud del número es mayor que 4, insertar una diagonal después del cuarto dígito\r\n            if (phoneNumber.length > 4) {\r\n                phoneNumber = phoneNumber.substring(0, 4) + '-' + phoneNumber.substring(4);\r\n            }\r\n\r\n            // Actualizar el valor del input con el número formateado\r\n            input.value = phoneNumber;\r\n        }\r\n    }\r\n\r\n})()","(function() {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteHidden.value) {\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const { nombre, apellido} = ponente;\r\n                \r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })();\r\n        }\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length >= 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                \r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                });\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-ponentes__no-resultado');\r\n                noResultado.textContent = 'No hay ponentes';\r\n                listadoPonentes.appendChild(noResultado);\r\n            }            \r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n            \r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if (ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function() {\r\n\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n \r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) { \r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }   \r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n           tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})();"]}